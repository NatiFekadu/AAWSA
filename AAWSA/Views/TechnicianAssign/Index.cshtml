
@model PaginatedList<AAWSA.Models.Complaint>


@using Microsoft.AspNetCore.Identity
@using AAWSA.Areas.Identity.Data

@inject UserManager<AAWSAUser> UserManager

@{
    ViewBag.Title = "All Complaints and services";

   IEnumerable<AAWSAUser> users = ViewData["users"] as IEnumerable<AAWSAUser>;

    
}



<h1>All Complaints </h1>


<form asp-action="Index" method="get" class=" ml-auto">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DateSortParm"]">Date</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]"> First Name</a>
            </th>

            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]">Last Name</a>
            </th>

            <th>
                Branch
            </th>
            <th>
                Special Place Name
            </th>
            <th>
                status
            </th>
            <th>
                Phone Number
            </th>
            <th>
                CaseType
            </th>
            <th>
                Complaint Type
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            if (item.Branches.ToString() == ViewBag.curBranche)
            {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Branches)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Special_Place_Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PhoneNumber)
            </td>

            <td>
                @Html.DisplayFor(modelItem => item.CaseType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Complaint_Type)
            </td>


            <td>


                <form method="post" asp-action="   ">
                    <div class="form-group col-md-4" value="@item.id">
                        <select class="userselect" name="techSele">
                            <option selected> Assign Technitian</option>
                            @foreach (AAWSAUser user in users)
                            {
                                @if (user.Branches.ToString() == ViewBag.curBranche && user.Role.ToString() == "Technician")
                                {

                                    <option>@user.FirstName  @user.LastName</option>

                                }
                            }
                        </select>


                    </div>

                </form>
            </td>
            <td>
                <form asp-action="" asp-route-id="" method="post">
                    <button type="submit"  class="btn btn-sm btn-info">
                        Assign
                    </button>
                </form>

            </td>
            
        </tr>
            }

           


        }



        

    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>
